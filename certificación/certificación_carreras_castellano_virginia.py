# -*- coding: utf-8 -*-
"""certificación carreras castellano virginia

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UBrZ2lD8VwFlpXf4oATzjAp1nYtri2xF

##EJERCICIO 2
1. F
2. V
3. V
4. F
5. V
6. V
7. V
8. V
9. V
10. V

##EJERCICIO 2
Ludmila tiene un negocio especializado en la venta de bicicletas. Hasta el momento registra 
todas sus operaciones en un cuaderno. Sin embargo, dado el éxito de su empresa, cada 
día le es más difícil poder tener control sobre las ventas de sus bicicletas y las ganancias 
que registra. Por esta razón, Ludmila necesita desarrollar un sistema que la ayude en su 
negocio. Como sabe que nos capacitamos en el curso en Programación Python se puso en 
contacto con nosotros para que la ayudemos a construir el sistema.
"""

class Bicicleteria ():
    def __init__(self, bicicletas, ganancia= 0, cant_de_ventas= 0 ):
            self.bicicletas=[bicicletas]
            self.ganancia= ganancia
            self.cant_de_ventas= cant_de_ventas
          

    def vender_bicicleta(self,cant_de_venta , ganancia):
        self.ganancia += ganancia
        self.cant_de_ventas += cant_de_venta             
        return f"Ganancias {self.ganancia} y Cantidad {self.cant_de_ventas}"  
        

    def comprar_bicleta(self, bicicletas):
            self.bicicletas.append(bicicletas)
            return f"Nueva bicicleta ingresada al stock:  {self.bicicletas}"

    class Bicicleta():
        def __init__(self,nro_de_serie= " ", modelo= " " , anio=int , precio= int ):
          self.nro_de_serie= nro_de_serie
          self.modelo= modelo
          self.anio= anio
          self.precio= precio
          
          # Debe poder modificar el precio de una bicicleta 
        def  set_precio(self, precio):
          self.precio=precio
          return f"modifica el precio de una bicicleta :  {self.precio}"
          #Devuelve el valor del precio de una bicicleta 
        def  get_precio(self):
          return f' El precio en pesos es {self.precio}'
        #Devuelve el nro de serie.
        def get_nro_de_serie(self):
          return f' El numero de serie es {self.nro_de_serie}'
        def mostrar_bici(self):
            return f'Bici nro de serie {self.nro_de_serie}, modelo {self.modelo},del anio {self.anio}, cuesta : $ {self.precio}'


bicicleteria1=Bicicleteria(["urbana", "ruta", "montaña"],3000,23)

# print(bicicleteria1)

# print(bicicleteria1.vender_bicicleta(3000000,2))
# print(bicicleteria1.comprar_bicleta('ruta'))

#bici1= Bicicleteria.Bicicleta('1gt','urbana',2022,56788)
#bici2= Bicicleteria.Bicicleta('2hju', 'ruta',2019,100456)
#bici3= Bicicleteria.Bicicleta('3kjh', 'montaña', 2020, 99700)
#bici4= Bicicleteria.Bicicleta('4jkbd', 'ruta', 2021, 427789)



#print(bici1.get_nro_de_serie())
#print(bici2.set_precio(40000))
#print(bici3.get_precio())
#print(bici4.mostrar_bici())

""".

##EJERCICIO 3
"""

import json

heroes= {
"nombre": "Flash",
"identidadSecreta": "Bartholomew Henry 'Barry' Allen",
"poderes": [
"Inmensa velocidad",
"agilidad",
"Electrokinesis"]
},{"nombre": "Batman",
"identidadSecreta": "Bruce Wayne",
"poderes": ["Super fuerza",
"super velocidad"]},{ "nombre": "Super Man",
"identidadSecreta": "Clark Joseph Kent",
"poderes": ["Super fuerza",
"super velocidad",
"resistencia", 
"agilidad",
"reflejos",
"durabilidad", 
"sentidos y longevidad"
]}
with open("super_heroes.json", 'w') as file:
    json.dump(heroe, file, indent=4)  
    
with open("super_heroes.json") as file:
  x = json.load(file)
print(x)

"""##EJERCICIO 4:
Análisis de datos 
Deberá importar el dataset que contiene información sobre los pasajeros del Titanic a través 
de la siguiente 
1. Mostrar la información de los primeros 5 pasajeros.
2. Mostrar la información de los últimos 5 pasajeros.
3. Mostrar la cantidad total de filas y columnas.
4. ¿Cuándo dinero se recaudó en ese viaje?
5. ¿Cuál es la Cantidad de personas que viajaban en primera clase? 
6. Graficar la cantidad de personas que viajaban por cada clase del barco
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline

df_Titanic = pd.read_csv('https://raw.githubusercontent.com/NotAyushXD/Titanic-dataset/master/train.csv')
df_Titanic.head()

#1. Mostrar la información de los primeros 5 pasajeros.

print('Primeras 10 filas:\n',df_Titanic.head(5))

#2. Mostrar la información de los últimos 5 pasajeros.

print('Últimas 10 filas:\n', df_Titanic.tail(5))

#3. Mostrar la cantidad total de filas y columnas.

print('Dimensiones:', df_Titanic.shape)
print('Número de elemntos:', df_Titanic.size)
print('Nombres de columnas:', df_Titanic.columns)
print('Nombres de filas:', df_Titanic.index)

#4. ¿Cuándo dinero se recaudó en ese viaje?

total = df_Titanic['Fare'].sum()

print(f'La cantidad de dinero que se recaudó es: {total}')

#5. ¿Cuál es la Cantidad de personas que viajaban en primera clase? 

total = df_Titanic['Pclass'].sum()

print(f'La cantidad de pasajeros que viajaban en primera clase es: {total}')

#6. Graficar la cantidad de personas que viajaban por cada clase del barco. Pclass	

df_Titanic['Pclass'].value_counts().plot(kind='bar')